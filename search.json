[
  {
    "objectID": "survey.html",
    "href": "survey.html",
    "title": "Survey",
    "section": "",
    "text": "library(data.table)\nlibrary(stringr)"
  },
  {
    "objectID": "survey.html#load-data-analytics-libraries",
    "href": "survey.html#load-data-analytics-libraries",
    "title": "Survey",
    "section": "",
    "text": "library(data.table)\nlibrary(stringr)"
  },
  {
    "objectID": "survey.html#input-data",
    "href": "survey.html#input-data",
    "title": "Survey",
    "section": "Input data",
    "text": "Input data\n\ndf &lt;- \"https://raw.githubusercontent.com/paulzierep/microgalaxy-survey/refs/heads/main/data/modified_answers.csv\" |&gt; fread()\n\n\nCorrect column names\n\ndf$V1 &lt;- NULL\n\ndf$Timestamp &lt;- df$Timestamp |&gt; str_split_i(\"\\\\ \", 1) |&gt; lubridate::as_date(format = \"%d/%m/%Y\")\n\ndf$`Which country are you based in?` &lt;- df$`Which country are you based in?` |&gt;\n    str_to_title() |&gt;\n    str_split_i(\"\\\\,\", 1) |&gt;\n    str_squish() |&gt;\n    str_replace(\"Bazil\", \"Brazil\") |&gt;\n    str_replace(\"Hunagry\", \"Hungary\") |&gt;\n    str_replace(\"England\", \"United Kingdom\")\n\n\n\nAdd continent\n\ndf$Continent &lt;- df$`Which country are you based in?` |&gt; countrycode::countrycode(origin = \"country.name\", destination = \"continent\")\n\n\n\nColumns of interest\n\ncoi &lt;- c(\n    \"Timestamp\", \n    \"What is your main target?\",\n    \"Which techniques do you use?\",\n    \"Which analysis do you use or would like to do?\",\n    \"Galaxy Obstacles\",\n    \"Which country are you based in?\",\n    \"Continent\",\n    \"If the tools, platforms or databases from the previous question could be deployed in Galaxy would use prefer to use in there?\"\n)\n\ndf_1 &lt;- df[, coi, with = FALSE]\n\ncolnames(df_1) = c(\n    \"Timestamp\", \n    \"MainTarget\",\n    \"Techniques\",\n    \"Analysis\",\n    \"ReasonNotUse\",\n    \"Country\",\n    \"Continent\",\n    \"PreferenceToUse\"\n)"
  },
  {
    "objectID": "survey.html#what-is-your-main-target",
    "href": "survey.html#what-is-your-main-target",
    "title": "Survey",
    "section": "What is your main target?",
    "text": "What is your main target?\n\np1 &lt;- df_1$MainTarget |&gt; \n    str_remove_all(\"\\\\(|Protozoa, Helminths|Plasmodium falciparum|\\\\)\") |&gt;  \n    str_to_title() |&gt;\n    str_replace(\"Viruses\", \"Virus\") |&gt;\n    str_replace(\"And Fungal Pathogens\", \"Fungal Pathogens\") |&gt;\n    str_split(\"\\\\,\") |&gt; \n    lapply(str_squish) |&gt; \n    lapply(function(x) data.table(\"target\" = x)) |&gt; \n    rbindlist(idcol = \"id\")\n\np1 &lt;- p1[which(target != \"\"), by = target, .(N = id |&gt; unique() |&gt; length())]\n\np1$group &lt;- ifelse(p1$N &gt; 1, p1$target, \"Other\")\n\np1 &lt;- p1[, by = group, .( N = N |&gt; sum())]\n\np1$Prop &lt;- p1$N / sum(p1$N)"
  },
  {
    "objectID": "survey.html#which-techniques-do-you-use",
    "href": "survey.html#which-techniques-do-you-use",
    "title": "Survey",
    "section": "Which techniques do you use?",
    "text": "Which techniques do you use?\n\np2 &lt;- df_1$Techniques |&gt;\n    str_to_title() |&gt;\n    str_remove(\"I Am Trying To Learn! Mostly Outsourced To Service Providers But Need To Learn As I Have Observed Inconsistent Results\") |&gt;\n    str_remove_all(\"Amplicon|\\\\/\") |&gt;\n    str_replace(\"Chip-Seq\", \"ChIP-seq\") |&gt;\n    str_replace(\"Proteomics Or Metaproteomics\", \"(Meta)Proteomics\") |&gt;\n    str_replace(\"Transcriptomics Or Metatranscriptomics\", \"(Meta)Transcriptomics\") |&gt;\n    str_replace(\"Metatranscriptomics\", \"(Meta)Transcriptomics\") |&gt;\n    str_replace(\"Single Organism Transcriptomics\", \"(Meta)Transcriptomics\") |&gt;\n    str_replace(\"Md Simulations\", \"MD simulations\") |&gt;\n    str_split(\"\\\\,\") |&gt;\n    lapply(str_squish) |&gt;\n    lapply(function(x) data.table(\"technique\" = x)) |&gt;\n    rbindlist(idcol = \"id\")\n\n\np2 &lt;- p2[which(technique != \"\"), by = technique, .(N = id |&gt; unique() |&gt; length())]\n\np2$group &lt;- ifelse(p2$N &gt; 1, p2$technique, \"Other\")\n\np2 &lt;- p2[, by = group, .( N = N |&gt; sum())]\n\np2$Prop &lt;- p2$N / sum(p2$N)"
  },
  {
    "objectID": "survey.html#which-analysis-do-you-use-or-would-like-to-do",
    "href": "survey.html#which-analysis-do-you-use-or-would-like-to-do",
    "title": "Survey",
    "section": "Which analysis do you use or would like to do?",
    "text": "Which analysis do you use or would like to do?\n\np3 &lt;- df_1$Analysis |&gt;\n    str_to_title() |&gt;\n    str_replace(\"Gwas\", \"GWAS\") |&gt;\n    str_replace(\"Mag\", \"MAG\") |&gt;\n    str_replace(\"Snp\", \"SNP\") |&gt;\n    str_replace(\"Mlst\", \"MLST\") |&gt;\n    \n    str_replace(\"MAGs Building\", \"Metagenome Assembled Genome (MAG) Building\") |&gt;\n    str_replace(\"SNP Identification\", \"Single Nucleotide Polymorphism (SNP) Identification\") |&gt;\n    str_replace(\"Transcriptome Assembler\", \"Transcriptome Assembly\") |&gt;\n    \n    str_split(\"\\\\,\") |&gt;\n    lapply(str_squish) |&gt;\n    lapply(function(x) data.table(\"analysis\" = x)) |&gt;\n    rbindlist(idcol = \"id\")\n\n\np3 &lt;- p3[which(analysis != \"\"), by = analysis, .(N = id |&gt; unique() |&gt; length())]\n\np3$group &lt;- ifelse(p3$N &gt; 1, p3$analysis, \"Other\")\n\np3 &lt;- p3[, by = group, .( N = N |&gt; sum())]\n\np3$Prop &lt;- p3$N / sum(p3$N)"
  },
  {
    "objectID": "survey.html#galaxy-obstacles",
    "href": "survey.html#galaxy-obstacles",
    "title": "Survey",
    "section": "Galaxy Obstacles",
    "text": "Galaxy Obstacles\n\np4 &lt;- df_1$ReasonNotUse |&gt; \n    str_split(\"\\\\,\") |&gt;\n    lapply(str_squish) |&gt;\n    lapply(function(x) data.table(\"reason\" = x)) |&gt;\n    rbindlist(idcol = \"id\")\n\np4 &lt;- p4[which(reason != \"\"), by = reason, .(N = id |&gt; unique() |&gt; length())]\n\np4$Prop &lt;- p4$N / sum(p4$N)"
  },
  {
    "objectID": "survey.html#which-continent-are-you-based-in",
    "href": "survey.html#which-continent-are-you-based-in",
    "title": "Survey",
    "section": "Which continent are you based in?",
    "text": "Which continent are you based in?\n\np5 &lt;- df_1[, by = Continent, .N]\n\n\np5$Continent &lt;- p5$Continent |&gt; str_replace_na(\"Unknown\")\n\n\np5$Prop &lt;- p5$N / sum(p5$N)"
  },
  {
    "objectID": "survey.html#if-the-tools-platforms-or-databases-from-the-previous-question-could-be-deployed-in-galaxy-would-use-prefer-to-use-in-there",
    "href": "survey.html#if-the-tools-platforms-or-databases-from-the-previous-question-could-be-deployed-in-galaxy-would-use-prefer-to-use-in-there",
    "title": "Survey",
    "section": "If the tools, platforms or databases from the previous question could be deployed in Galaxy would use prefer to use in there?",
    "text": "If the tools, platforms or databases from the previous question could be deployed in Galaxy would use prefer to use in there?\n\np6 &lt;- df_1[, by = PreferenceToUse, .N]\n\np6[which(PreferenceToUse == \"\")]$PreferenceToUse = \"Unknown\"\n\np6$Prop &lt;- p6$N / sum(p6$N)"
  },
  {
    "objectID": "survey.html#merge-data-table-lsit",
    "href": "survey.html#merge-data-table-lsit",
    "title": "Survey",
    "section": "Merge data table lsit ———–",
    "text": "Merge data table lsit ———–\n\ndf_plot &lt;- list(\n    \"What is your main target?\"                                = p1,\n    \"Which techniques do you use?\"                             = p2,\n    \"Which analysis do you use or would like to do?\"           = p3,\n    \"If you never or rarely use Galaxy, what are the reasons?\" = p4,\n    \"Survey answer by continent\"                               = p5,\n    \"If the tools, platforms or databases from the previous question could be deployed in Galaxy would use prefer to use in there?\" = p6\n    \n) |&gt;\n    lapply(function(x) {\n        \n        colnames(x) &lt;- c(\"ylabel\", \"N\", \"Prop\")\n        \n        x &lt;- x[order(-N)]\n        \n        x$label &lt;- x$Prop |&gt; round(digits = 4) |&gt; scales::percent()\n        \n        return(x)\n    }) |&gt;\n    rbindlist(idcol = \"question\")"
  },
  {
    "objectID": "survey.html#output-figure",
    "href": "survey.html#output-figure",
    "title": "Survey",
    "section": "Output Figure",
    "text": "Output Figure\n\nLoad plotting libraries\n\nlibrary(ggplot2)\nlibrary(ggh4x)\n\nlibrary(shadowtext)\n\nlibrary(tidytext)\n\n\n\nPlot\n\ndf_plot$question2 &lt;- df_plot$question |&gt; str_wrap(width = 30)\n\ndf_plot$question2 &lt;- df_plot$question2 |&gt; factor(levels = df_plot$question2 |&gt; unique())\n\ngr &lt;- df_plot |&gt;\n    ggplot(aes(x = N, y = reorder_within(ylabel, N, question2))) +\n    \n    geom_point(size = 4.65, aes(fill = Prop), shape = 21, stroke = .25, color = \"grey25\") +\n    geom_col(width = .75, aes(fill = Prop), lineend = \"round\", color = \"grey25\", linewidth = .15) +\n    geom_point(size = 4.31, aes(fill = Prop, color = Prop), shape = 21, stroke = .25) +\n    \n    \n    geom_shadowtext(aes(label = label), size = 3, hjust = 0, vjust = .5, position = position_nudge(x = 4.5),\n                    bg.r = .05, bg.color = \"white\", color = \"black\") +\n\n    scale_y_reordered() +\n    scale_x_continuous(expand = c(0, 0), \n                       limits = c(0, 123), \n                       breaks = c(10, 25, 50, 75, 100), \n                       minor_breaks = c(17.5, 37.5, 62.5, 87.5, 112.5)) +\n    \n    facet_grid2(vars(question2), scales = \"free_y\", space = \"free_y\") +\n    \n    scale_fill_stepsn(colors = paletteer_c(\"ggthemes::Red-Blue Diverging\", 5, direction = -1),\n                      breaks = c(.2, .4, .6, .8),\n                      limits = c(0, 1),\n                      labels = scales::percent,\n                      guide = guide_colorsteps(barwidth = unit(12, \"lines\"), \n                                               barheight = unit(.5, \"lines\"))) +\n    \n    scale_color_stepsn(colors = paletteer_c(\"ggthemes::Red-Blue Diverging\", 5, direction = -1),\n                       breaks = c(.2, .4, .6, .8),\n                       limits = c(0, 1),\n                       guide = \"none\") +\n    \n    # scale_fill_gradient(low = \"#4E79A7\" |&gt; lighten(.25), high = \"#E15759\" |&gt; darken(.3)) +\n    # scale_color_gradient(low = \"#4E79A7\" |&gt; lighten(.25), high = \"#E15759\" |&gt; darken(.3)) +\n    \n    theme_minimal() +\n    theme(\n        # legend.position.inside = TRUE,\n        legend.position = \"bottom\",\n        legend.title.position = \"top\",\n        legend.title = element_text(family = \"Calibri\"),\n        \n        strip.clip = \"off\",\n        strip.text.y.right = element_text(face = \"bold\", angle=0, vjust=.5, hjust = 0),\n        strip.background = element_blank(),\n        \n        axis.title.y = element_blank(),\n        axis.title.x = element_text(margin = margin(t = 5)),\n        \n        panel.grid.major.y = element_blank(),\n        \n        panel.grid.minor.x = element_line(color = \"grey85\", linetype = \"dotted\", lineend = \"round\"),\n        panel.grid.major.x = element_line(color = \"grey85\"),\n        \n        panel.background = element_rect(fill = NA, color = \"grey85\"),\n        \n        axis.line = element_line(lineend = \"round\"),\n        axis.ticks = element_line(lineend = \"round\"),\n        \n        plot.margin = margin(20, 20, 20, 20)\n    ) +\n    \n    labs(x = \"Number of Responses\", fill = \"Proportion\")"
  },
  {
    "objectID": "explore-publications.html",
    "href": "explore-publications.html",
    "title": "Explore Publications",
    "section": "",
    "text": "This notebook explore the publications citing Galaxy.\nimport datetime\nimport matplotlib.pyplot as plt\nimport os\nimport pandas as pd\nimport pprint\nimport re\nimport requests\nimport time\n\nfrom pathlib import Path\nfrom pyzotero import zotero\nfrom scholarly import ProxyGenerator, scholarly\nresult_dp = Path(\"../results/citations/\") \nresult_dp.mkdir(parents=True, exist_ok=True)\nsearched_tags = [\n    'bacteri', # bacteria, bacterio\n    'prokaryot', # prokaryote, prokaryotic\n    'microb', # microbiome, microbiota, microbial, microbiology, microbe\n    'pathogen',\n    'virus',\n    'phage',\n    'archae',\n    'flora',\n    'microecology',\n    'microorganism', 'micro-organism',\n    'microbiome', 'microbiota',\n    'metabarcod', # metabarcode, metabarcoding\n        '16s', '16 s',\n        '18s',\n        'amplicon',\n        'metataxonom',\n    'metagenom', # metagenome, metagenomic\n    'metatranscriptom', # metatranscriptome, metatranscriptomic\n    'metaproteom', # metaproteome, metaproteomic\n    'multi-locus sequence typing', 'multilocus sequence typing', 'mlst',\n    'otu'\n]\ndef create_grouping_keywords():\n    return {\n        'Targeted organisms': {\n            'Bacteria': {\n                'keywords': ['bacteri', 'prokaryot'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Virus': {\n                'keywords': ['virus', 'phage'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Archaea': {\n                'keywords': ['archae'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Eukaryote': {\n                'keywords': ['eukaryot'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Microbiome': {\n                'keywords': ['microbiome', 'microbiota', 'flora', 'ecology', 'community', 'communities'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Pathogen': {\n                'keywords': ['pathogen'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            }\n        },\n        'Technical target': {\n            'Isolate': {\n                'keywords': ['isolate'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Community (taxonomy) profiling': {\n                'keywords': ['otu', 'asv', 'taxonom', 'community', 'communities', 'ecosystem', 'diversity', 'ecology'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Functional analysis': {\n                'keywords': ['function'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Interactome': {\n                'keywords': ['interaction'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'AMR': {\n                'keywords': ['antimicrobial', 'resistan', 'amr'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'MAGs': {\n                'keywords': ['mags', 'metagenome-assembled genome', 'assembly'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Gene identification / Biomarker': {\n                'keywords': ['gene identification', 'biomarker'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'SNP': {\n                'keywords': ['snp', 'single-nucleotide polymorphism'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            '(M)LST': {\n                'keywords': ['mlst', 'locus sequence typing'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Annotation': {\n                'keywords': ['annotation'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Variant': {\n                'keywords': ['variant'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Comparative analysis': {\n                'keywords': ['comparative'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n        },\n        'Methods': {\n            'Metabarcoding': {\n                'keywords': ['metabarcod', '16s', '16 s', '18s', 'amplicon', 'metataxonom'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            '(Meta)genomics': {\n                'keywords': ['genom'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Metagenomics': {\n                'keywords': ['metagenom'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            '(Meta)transcriptomics': {\n                'keywords': ['transcriptom'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Metatranscriptomics': {\n                'keywords': ['metatranscriptom'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            '(Meta)proteomics': {\n                'keywords': ['proteom', 'mass spectrometry'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Metaproteomics': {\n                'keywords': ['metaproteom'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Metabolomics': {\n                'keywords': ['metabolom', 'metabolite'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n            'Imaging': {\n                'keywords': ['imaging'],\n                'location': ['tag', 'title', 'abstract'],\n                'counts': 0\n            },\n        }    \n    }\n\ndef find_kw(string, kws):\n    '''\n    Return if a 1 keyword in a list is found in a string\n\n    :param string: string to search\n    :param kws: list of keywords to search\n    '''\n    found = False\n    for kw in kws:\n        if kw in string:\n            found = True\n    return found"
  },
  {
    "objectID": "explore-publications.html#galaxy-publication-library",
    "href": "explore-publications.html#galaxy-publication-library",
    "title": "Explore Publications",
    "section": "Galaxy Publication Library",
    "text": "Galaxy Publication Library\nThe Galaxy Project uses the Zotero social bookmarking service to organize publications that reference Galaxy. The Galaxy Group lists published articles, conference proceedings, theses, book chapters and books that use, extend, reference or implement Galaxy.\n\nZOTERO_API = os.getenv('ZOTERO_API')\nzot = zotero.Zotero('1732893', 'group', ZOTERO_API)\n\nIn this Galaxy Publication Library, the number of elements is:\n\nelement_nb = zot.count_items()\nelement_nb"
  },
  {
    "objectID": "explore-publications.html#extract-items-based-on-keywords-in-tags-titles-and-abstracts",
    "href": "explore-publications.html#extract-items-based-on-keywords-in-tags-titles-and-abstracts",
    "title": "Explore Publications",
    "section": "Extract items based on keywords in tags, titles, and abstracts",
    "text": "Extract items based on keywords in tags, titles, and abstracts\nThe library makes extensive use of tags to categorize publications and enable smarter searching. But only papers added after the library was moved to Zotero in September 2017 have automatically added tags.\nWe extract items related to microbial data analysis by checking if their title, abstract, or tags contains any of following keywords:\n\nconserved_items = []\nconserved_tags = set()\nexcluded_tags = set()\nyears = {\n    \"all\": {},\n    \"microbial\": {}\n}\n\n\nfor y in range(2005, datetime.date.today().year+2):\n    years[\"all\"].setdefault(f\"{y}\", 0)\n    years[\"microbial\"].setdefault(f\"{y}\", 0)\n\nfor item in zot.everything(zot.top()):\n    year = 0\n    \n    # get year\n    if \"date\" in item[\"data\"]:\n        match = re.match(r\".*(2[0-9]{3})\", item[\"data\"][\"date\"])\n        if match is not None:\n            year = match.group(1)\n            years[\"all\"][year] += 1\n    \n    to_add = False\n\n    # search in tags\n    for tag in item['data']['tags']:\n        for st in searched_tags:\n            if st in tag['tag'].lower():\n                conserved_tags.add(tag['tag'].lower())\n                to_add = True\n            else:\n                excluded_tags.add(tag['tag'].lower())\n\n    # search in title and abstract\n    for st in searched_tags:\n        if 'title' in item['data'] and st in item['data']['title'].lower():\n            to_add = True\n        if 'abstractNote' in item['data'] and st in item['data']['abstractNote'].lower():\n            to_add = True\n\n    # keep item if found\n    if to_add:\n        conserved_items.append(item)\n        if year != 0:\n            years[\"microbial\"][year] += 1\n\nCONTINUE"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "microGalaxy 2025 Paper",
    "section": "",
    "text": "This is a Quarto website. This repository includes all the scripts written to produce figures in the paper along with the resulted figures\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  }
]